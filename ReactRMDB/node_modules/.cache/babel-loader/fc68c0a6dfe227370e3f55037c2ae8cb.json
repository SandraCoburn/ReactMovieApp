{"ast":null,"code":"import _slicedToArray from \"/Users/sandracoburn/Desktop/MovieApp/2. React RMDB - Start Here/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/sandracoburn/Desktop/MovieApp/2. React RMDB - Start Here/src/components/Home.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { API_URL, API_KEY, IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } from \"../config\"; //import components\n\nimport Grid from \"./elements/Grid\";\nimport HeroImage from \"./elements/HeroImage\";\nimport LoadMoreBtn from \"./elements/LoadMoreBtn\";\nimport MovieThumb from \"./elements/MovieThumb\";\nimport SearchBar from \"./elements/SearchBar\";\nimport Spinner from \"./elements/Spinner\"; // we import our custom hook here:\n\nimport { useHomeFetch } from \"./hooks/useHomeFetch\"; //if there is no image it will show another pic:\n\nimport NoImage from \"./images/no_image.jpg\";\n\nconst Home = () => {\n  const _useHomeFetch = useHomeFetch(),\n        _useHomeFetch2 = _slicedToArray(_useHomeFetch, 2),\n        _useHomeFetch2$ = _useHomeFetch2[0],\n        state = _useHomeFetch2$.state,\n        loading = _useHomeFetch2$.loading,\n        error = _useHomeFetch2$.error,\n        fetchMovies = _useHomeFetch2[1];\n\n  console.log(state); //This will load  the moviethumbr:\n\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        searchTerm = _useState2[0],\n        setSearchTerm = _useState2[1]; // callback for onclick button:\n\n\n  const loadMoreMovies = () => {\n    const searchEndPoint = \"\".concat(API_URL, \"search/movie?api_key=\").concat(API_KEY, \"&query=\").concat(searchTerm, \"&page=\").concat(state.currentPage + 1);\n    const popularEndPoint = \"\".concat(API_URL, \"movie/popular?api_key=\").concat(API_KEY, \"&page=\").concat(state.currentPage + 1);\n    const ednpoint = searchTerm ? searchEndPoint : popularEndPoint;\n    fetchMovies(ednpoint);\n  };\n\n  if (error) return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Something went wrong\");\n  if (!state.movies[0]) return React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  });\n  return React.createElement(React.Fragment, null, React.createElement(HeroImage, {\n    image: \"\".concat(IMAGE_BASE_URL).concat(BACKDROP_SIZE).concat(state.heroImage.backdrop_path),\n    title: state.heroImage.original_title,\n    text: state.heroImage.overview,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(SearchBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    header: searchTerm ? \"Search Result\" : \"Popular Movies\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, state.movies.map(movie => React.createElement(MovieThumb, {\n    key: movie.id,\n    clickable: true,\n    image: movie.poster_path ? \"\".concat(IMAGE_BASE_URL).concat(BACKDROP_SIZE).concat(movie.poster_path) : NoImage,\n    movieId: movie.id,\n    movieName: movie.original_title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }))), loading && React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), state.currentPage < state.totalPages && !loading && React.createElement(LoadMoreBtn, {\n    text: \"Load More\",\n    callback: loadMoreMovies,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }));\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/sandracoburn/Desktop/MovieApp/2. React RMDB - Start Here/src/components/Home.js"],"names":["React","useState","useEffect","API_URL","API_KEY","IMAGE_BASE_URL","POSTER_SIZE","BACKDROP_SIZE","Grid","HeroImage","LoadMoreBtn","MovieThumb","SearchBar","Spinner","useHomeFetch","NoImage","Home","state","loading","error","fetchMovies","console","log","searchTerm","setSearchTerm","loadMoreMovies","searchEndPoint","currentPage","popularEndPoint","ednpoint","movies","heroImage","backdrop_path","original_title","overview","map","movie","id","poster_path","totalPages"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  API_URL,\n  API_KEY,\n  IMAGE_BASE_URL,\n  POSTER_SIZE,\n  BACKDROP_SIZE\n} from \"../config\";\n\n//import components\nimport Grid from \"./elements/Grid\";\nimport HeroImage from \"./elements/HeroImage\";\nimport LoadMoreBtn from \"./elements/LoadMoreBtn\";\nimport MovieThumb from \"./elements/MovieThumb\";\nimport SearchBar from \"./elements/SearchBar\";\nimport Spinner from \"./elements/Spinner\";\n\n// we import our custom hook here:\nimport { useHomeFetch } from \"./hooks/useHomeFetch\";\n//if there is no image it will show another pic:\nimport NoImage from \"./images/no_image.jpg\";\n\nconst Home = () => {\n  const [{ state, loading, error }, fetchMovies] = useHomeFetch();\n  console.log(state);\n  //This will load  the moviethumbr:\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  // callback for onclick button:\n  const loadMoreMovies = () => {\n    const searchEndPoint = `${API_URL}search/movie?api_key=${API_KEY}&query=${searchTerm}&page=${state.currentPage +\n      1}`;\n    const popularEndPoint = `${API_URL}movie/popular?api_key=${API_KEY}&page=${state.currentPage +\n      1}`;\n    const ednpoint = searchTerm ? searchEndPoint : popularEndPoint;\n\n    fetchMovies(ednpoint);\n  };\n\n  if (error) return <div>Something went wrong</div>;\n  if (!state.movies[0]) return <Spinner />;\n\n  return (\n    <>\n      <HeroImage\n        image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${state.heroImage.backdrop_path}`}\n        title={state.heroImage.original_title}\n        text={state.heroImage.overview}\n      />\n      <SearchBar />\n      <Grid header={searchTerm ? \"Search Result\" : \"Popular Movies\"}>\n        {state.movies.map(movie => (\n          <MovieThumb\n            key={movie.id}\n            clickable\n            image={\n              movie.poster_path\n                ? `${IMAGE_BASE_URL}${BACKDROP_SIZE}${movie.poster_path}`\n                : NoImage\n            }\n            movieId={movie.id}\n            movieName={movie.original_title}\n          />\n        ))}\n      </Grid>\n      {loading && <Spinner />}\n      {state.currentPage < state.totalPages && !loading && (\n        <LoadMoreBtn text=\"Load More\" callback={loadMoreMovies} />\n      )}\n    </>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}