{"ast":null,"code":"import _slicedToArray from \"/Users/sandracoburn/Desktop/MovieApp/2. React RMDB - Start Here/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState, useEffect, useCallback } from \"react\";\nimport { API_URL, API_KEY } from \"../../config\";\nexport const useMovieFetch = movieId => {\n  const _useState = useState({}),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        loading = _useState4[0],\n        setLoading = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        error = _useState6[0],\n        setError = _useState6[1];\n\n  const fetchData = useCallback(async () => {\n    setError(false);\n    setLoading(true);\n\n    try {\n      const endpoint = \"\".concat(API_URL, \"movie/\").concat(movieId, \"?api_key=\").concat(API_KEY);\n      const result = await (await fetch(endpoint)).json();\n      console.log(\"result\", result);\n      const creditsEndpoint = \"\".concat(API_URL, \"movie/\").concat(movieId, \"/credits?api_key=\").concat(API_KEY);\n      const creditsResult = await (await fetch(creditsEndpoint)).json();\n      console.log(\"credits result\", creditsResult);\n    } catch (error) {\n      setError(true);\n    }\n\n    setLoading(false);\n  }, [movieId]);\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n  return [state, loading, error];\n};","map":{"version":3,"sources":["/Users/sandracoburn/Desktop/MovieApp/2. React RMDB - Start Here/src/components/hooks/useMovieFetch.js"],"names":["useState","useEffect","useCallback","API_URL","API_KEY","useMovieFetch","movieId","state","setState","loading","setLoading","error","setError","fetchData","endpoint","result","fetch","json","console","log","creditsEndpoint","creditsResult"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,WAA9B,QAAiD,OAAjD;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,cAAjC;AAEA,OAAO,MAAMC,aAAa,GAAGC,OAAO,IAAI;AAAA,oBACZN,QAAQ,CAAC,EAAD,CADI;AAAA;AAAA,QAC/BO,KAD+B;AAAA,QACxBC,QADwB;;AAAA,qBAERR,QAAQ,CAAC,KAAD,CAFA;AAAA;AAAA,QAE/BS,OAF+B;AAAA,QAEtBC,UAFsB;;AAAA,qBAGZV,QAAQ,CAAC,KAAD,CAHI;AAAA;AAAA,QAG/BW,KAH+B;AAAA,QAGxBC,QAHwB;;AAKtC,QAAMC,SAAS,GAAGX,WAAW,CAAC,YAAY;AACxCU,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACAF,IAAAA,UAAU,CAAC,IAAD,CAAV;;AAEA,QAAI;AACF,YAAMI,QAAQ,aAAMX,OAAN,mBAAsBG,OAAtB,sBAAyCF,OAAzC,CAAd;AACA,YAAMW,MAAM,GAAG,MAAM,CAAC,MAAMC,KAAK,CAACF,QAAD,CAAZ,EAAwBG,IAAxB,EAArB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBJ,MAAtB;AACA,YAAMK,eAAe,aAAMjB,OAAN,mBAAsBG,OAAtB,8BAAiDF,OAAjD,CAArB;AACA,YAAMiB,aAAa,GAAG,MAAM,CAAC,MAAML,KAAK,CAACI,eAAD,CAAZ,EAA+BH,IAA/B,EAA5B;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BE,aAA9B;AACD,KAPD,CAOE,OAAOV,KAAP,EAAc;AACdC,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD;;AACDF,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAf4B,EAe1B,CAACJ,OAAD,CAf0B,CAA7B;AAiBAL,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,SAAS;AACV,GAFQ,EAEN,CAACA,SAAD,CAFM,CAAT;AAGA,SAAO,CAACN,KAAD,EAAQE,OAAR,EAAiBE,KAAjB,CAAP;AACD,CA1BM","sourcesContent":["import { useState, useEffect, useCallback } from \"react\";\nimport { API_URL, API_KEY } from \"../../config\";\n\nexport const useMovieFetch = movieId => {\n  const [state, setState] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  const fetchData = useCallback(async () => {\n    setError(false);\n    setLoading(true);\n\n    try {\n      const endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}`;\n      const result = await (await fetch(endpoint)).json();\n      console.log(\"result\", result);\n      const creditsEndpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\n      const creditsResult = await (await fetch(creditsEndpoint)).json();\n      console.log(\"credits result\", creditsResult);\n    } catch (error) {\n      setError(true);\n    }\n    setLoading(false);\n  }, [movieId]);\n\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n  return [state, loading, error];\n};\n"]},"metadata":{},"sourceType":"module"}