{"ast":null,"code":"import _defineProperty from \"/Users/sandracoburn/Desktop/MovieApp/2. React RMDB - Start Here/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/sandracoburn/Desktop/MovieApp/2. React RMDB - Start Here/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState, useEffect } from \"react\";\nimport { API_URL, API_KEY } from \"../../config\";\nexport const useHomeFetch = () => {\n  const _useState = useState({\n    movies: []\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        loading = _useState4[0],\n        setLoading = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        error = _useState6[0],\n        setError = _useState6[1];\n\n  const fetchMovies = async endpoint => {\n    setError(false);\n    setLoading(true);\n    const isLoadMore = endpoint.search(\"page\");\n\n    try {\n      const result = await (await fetch(endpoint)).json();\n      console.log(result);\n      setState(prev => _objectSpread({}, prev, {\n        movies: isLoadMore !== -1 ? [...prev.movies, ...result.results] : [...result.results],\n        //short circuit to check if we have an image or not\n        heroImage: prev.heroImage || result.results[0],\n        currentPage: result.page,\n        totalPages: result.total_pages\n      }));\n    } catch (error) {\n      setError(true);\n      console.log(error);\n    }\n\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    fetchMovies(\"\".concat(API_URL, \"movie/popular?api_key=\").concat(API_KEY));\n  }, []);\n  return [{\n    state,\n    loading,\n    error\n  }, fetchMovies];\n};","map":{"version":3,"sources":["/Users/sandracoburn/Desktop/MovieApp/2. React RMDB - Start Here/src/components/hooks/useHomeFetch.js"],"names":["useState","useEffect","API_URL","API_KEY","useHomeFetch","movies","state","setState","loading","setLoading","error","setError","fetchMovies","endpoint","isLoadMore","search","result","fetch","json","console","log","prev","results","heroImage","currentPage","page","totalPages","total_pages"],"mappings":";;;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,cAAjC;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAM;AAAA,oBACNJ,QAAQ,CAAC;AAAEK,IAAAA,MAAM,EAAE;AAAV,GAAD,CADF;AAAA;AAAA,QACzBC,KADyB;AAAA,QAClBC,QADkB;;AAAA,qBAEFP,QAAQ,CAAC,KAAD,CAFN;AAAA;AAAA,QAEzBQ,OAFyB;AAAA,QAEhBC,UAFgB;;AAAA,qBAGNT,QAAQ,CAAC,KAAD,CAHF;AAAA;AAAA,QAGzBU,KAHyB;AAAA,QAGlBC,QAHkB;;AAKhC,QAAMC,WAAW,GAAG,MAAMC,QAAN,IAAkB;AACpCF,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACAF,IAAAA,UAAU,CAAC,IAAD,CAAV;AAEA,UAAMK,UAAU,GAAGD,QAAQ,CAACE,MAAT,CAAgB,MAAhB,CAAnB;;AAEA,QAAI;AACF,YAAMC,MAAM,GAAG,MAAM,CAAC,MAAMC,KAAK,CAACJ,QAAD,CAAZ,EAAwBK,IAAxB,EAArB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AACAT,MAAAA,QAAQ,CAACc,IAAI,sBACRA,IADQ;AAEXhB,QAAAA,MAAM,EACJS,UAAU,KAAK,CAAC,CAAhB,GACI,CAAC,GAAGO,IAAI,CAAChB,MAAT,EAAiB,GAAGW,MAAM,CAACM,OAA3B,CADJ,GAEI,CAAC,GAAGN,MAAM,CAACM,OAAX,CALK;AAOX;AACAC,QAAAA,SAAS,EAAEF,IAAI,CAACE,SAAL,IAAkBP,MAAM,CAACM,OAAP,CAAe,CAAf,CARlB;AASXE,QAAAA,WAAW,EAAER,MAAM,CAACS,IATT;AAUXC,QAAAA,UAAU,EAAEV,MAAM,CAACW;AAVR,QAAL,CAAR;AAYD,KAfD,CAeE,OAAOjB,KAAP,EAAc;AACdC,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAYV,KAAZ;AACD;;AACDD,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GA1BD;;AA2BAR,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,WAAW,WAAIV,OAAJ,mCAAoCC,OAApC,EAAX;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,SAAO,CAAC;AAAEG,IAAAA,KAAF;AAASE,IAAAA,OAAT;AAAkBE,IAAAA;AAAlB,GAAD,EAA4BE,WAA5B,CAAP;AACD,CArCM","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { API_URL, API_KEY } from \"../../config\";\n\nexport const useHomeFetch = () => {\n  const [state, setState] = useState({ movies: [] });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  const fetchMovies = async endpoint => {\n    setError(false);\n    setLoading(true);\n\n    const isLoadMore = endpoint.search(\"page\");\n\n    try {\n      const result = await (await fetch(endpoint)).json();\n      console.log(result);\n      setState(prev => ({\n        ...prev,\n        movies:\n          isLoadMore !== -1\n            ? [...prev.movies, ...result.results]\n            : [...result.results],\n\n        //short circuit to check if we have an image or not\n        heroImage: prev.heroImage || result.results[0],\n        currentPage: result.page,\n        totalPages: result.total_pages\n      }));\n    } catch (error) {\n      setError(true);\n      console.log(error);\n    }\n    setLoading(false);\n  };\n  useEffect(() => {\n    fetchMovies(`${API_URL}movie/popular?api_key=${API_KEY}`);\n  }, []);\n\n  return [{ state, loading, error }, fetchMovies];\n};\n"]},"metadata":{},"sourceType":"module"}